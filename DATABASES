1)ProejctList
CREATE PROCEDURE solution()
BEGIN
  SELECT project_name,team_lead,income FROM Projects 
  ORDER BY internal_id ASC;
END

2)CountriesSelection
 CREATE PROCEDURE solution()
BEGIN
     SELECT * FROM countries
	 WHERE continent='Africa'
	 ORDER BY name ASC;
END

3)MOnethlyScholarships
CREATE PROCEDURE solution()
BEGIN
SELECT id,scholarship/12 AS scholarship FROM scholarships
ORDER BY id ASC;

END

4)ProejectsTeam
CREATE PROCEDURE solution()
BEGIN
SELECT DISTINCT name FROM projectLog
ORDER BY name ASC;
END

5)AutomaticNotifications
CREATE PROCEDURE solution()
    SELECT email
    FROM users
    WHERE lower(role) NOT IN ("admin", "premium")

    ORDER BY email;

6)VolleyBallResults
CREATE PROCEDURE solution()
BEGIN
SELECT * FROM results
ORDER BY wins ASC;
END

7)MostExpensive
CREATE PROCEDURE solution()
BEGIN
 SELECT name FROM Products
 WHERE price*quantity = (
	SELECT max(price*quantity) FROM Products
 )
 ORDER BY name ASC
 LIMIT 1;
 END 

8)ContestLeaderBoard
CREATE PROCEDURE solution()
BEGIN
	SELECT name FROM leaderboard ORDER BY score DESC LIMIT 5 OFFSET 3;
END

9)GradeDivision
CREATE PROCEDURE solution()
BEGIN
	SELECT Name, ID 
	FROM Grades 
	WHERE Final > Midterm1 / 2 + Midterm2 / 2 
		OR Final > Midterm1 / 4 + Midterm2 / 4 + Final / 2 
	ORDER BY substring(Name, 1, 3), ID;
END

10)MischieviousNephewas
CREATE PROCEDURE solution()
BEGIN
	SELECT weekday(mischief_date) AS weekday, mischief_date, author,title
    FROM mischief
    ORDER BY weekday,field(author,"Huey","Dewey","Louie"),mischief_date,title;
END

11)SuspectsInvestigation
CREATE PROCEDURE solution()
BEGIN
	SELECT id,name,surname FROM Suspect WHERE upper(name) LIKE 'b%' AND height<=170 AND upper(surname) LIKE 'gre_n';
END

12)suspectsInvestigation2
CREATE PROCEDURE solution()
BEGIN
	SELECT id,name,surname 
	FROM Suspect WHERE height <= 170 OR upper(surname) NOT LIKE 'gre_n' OR upper(name) NOT LIKE 'B%' ORDER BY id;
END

13)SecurityBreach
CREATE PROCEDURE securityBreach()
BEGIN
	SELECT first_name, second_name, attribute
    FROM users
    WHERE attribute LIKE BINARY concat('_%\%',first_name,'\_',second_name,'\%%');
END

14)testcheck
CREATE PROCEDURE solution()
    SELECT id, IF ( given_answer is Null, 'no answer', IF(given_answer = correct_answer, 'correct','incorrect') ) AS checks
    FROM answers
    ORDER BY id;

15)expressionsVerification
CREATE PROCEDURE expressionsVerification()
BEGIN
	SELECT * 
    FROM expressions
    WHERE (operation='+' AND c=a+b)
        OR(operation='-' AND c=a-b)
        OR(operation='/' AND c=a/b)
        OR(operation='*' AND c=a*b);
END

16)NewSubscriber
CREATE PROCEDURE solution()
BEGIN
	SELECT subscriber FROM full_year WHERE instr(newspaper,'Daily')
    UNION
    SELECT subscriber FROM half_year WHERE instr(newspaper,'Daily') ORDER BY subscriber;
END
